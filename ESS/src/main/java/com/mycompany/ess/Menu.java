/*
 *The Report Generator class was produced by Soloman Fitiwok, Michaela Laplante, 
Rozanne Cabrera, Abraham Muslimani, and Eric Harvey. The use is limited
to non commercial analisys of power system meterics. 
 */
package com.mycompany.ess;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Wolf
 */
public class Menu extends javax.swing.JFrame {
    
    private final JFileChooser openFileChooser;
    private final HashMap<String,Integer> map = new HashMap<>();
    private ArrayList<File> importedFiles = new ArrayList<File>();
    private ReportGenerator holdReport;
   
    
    /**
     * Creates new form Menu
     */
    public Menu() {
        // makes gui
        initComponents();
        
        openFileChooser = new JFileChooser();
        openFileChooser.setCurrentDirectory(new File("c:\\temp"));
        openFileChooser.setFileFilter(new FileNameExtensionFilter("CSV data", "CSV"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openFileButton = new javax.swing.JButton();
        reviewFileButton = new javax.swing.JButton();
        generateReportButton = new javax.swing.JButton();
        removeFileButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageLabel = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Electrical Loads Software");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        openFileButton.setText("Import Data File(s)");
        openFileButton.setToolTipText("Import a CSV data file.");
        openFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileButtonActionPerformed(evt);
            }
        });

        reviewFileButton.setText("Review Imported Data File(s)");
        reviewFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewFileButtonActionPerformed(evt);
            }
        });

        generateReportButton.setText("Generate Report");
        generateReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateReportButtonActionPerformed(evt);
            }
        });

        removeFileButton.setText("Remove File");
        removeFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFileButtonActionPerformed(evt);
            }
        });

        exportButton.setText("Export Report File");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        messageLabel.setColumns(20);
        messageLabel.setRows(5);
        jScrollPane1.setViewportView(messageLabel);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Eric_\\Documents\\NetBeansProjects\\ESS\\src\\main\\java\\com\\mycompany\\ess\\ELSLogo_AKM.png")); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(openFileButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(reviewFileButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(removeFileButton)
                                .addGap(18, 18, 18)
                                .addComponent(generateReportButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                                .addComponent(exportButton)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(openFileButton)
                            .addComponent(reviewFileButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removeFileButton)
                            .addComponent(generateReportButton)
                            .addComponent(exportButton)))
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileButtonActionPerformed
        int returnValue = openFileChooser.showOpenDialog(this);
        
        if (returnValue ==JFileChooser.APPROVE_OPTION){
            importedFiles.add(openFileChooser.getSelectedFile());
        }
        else {
            messageLabel.setText("No File choosen.");
        }
        
    }//GEN-LAST:event_openFileButtonActionPerformed

    private void reviewFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewFileButtonActionPerformed
        messageLabel.setText(getFileNames());
    }//GEN-LAST:event_reviewFileButtonActionPerformed

    private void removeFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFileButtonActionPerformed
      if(importedFiles.size()!=0){
        JFrame popUp = new JFrame("File Selection");
        JPanel selectionBox = new JPanel();
        popUp.setLayout(new BorderLayout());
        selectionBox.setLayout(new BoxLayout(selectionBox, BoxLayout.Y_AXIS));
        JButton confirmButton = new JButton("Confirm and Remove");
        JCheckBox[] checkBoxes = new JCheckBox[importedFiles.size()];
        for(int i=0;i< checkBoxes.length;i++){
            checkBoxes[i] = new JCheckBox(importedFiles.get(i).getName());
            selectionBox.add(checkBoxes[i]);
        }
        selectionBox.add(confirmButton);
        popUp.add(selectionBox, BorderLayout.CENTER);
        popUp.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        popUp.setSize(400,500);
        popUp.setVisible(true);
        confirmButton.addActionListener(e ->{
            for(int i=0; i<checkBoxes.length; i++){
                if(checkBoxes[i].isSelected())
                    importedFiles.remove(findFile(checkBoxes[i].getText()));
            }
            popUp.dispose();
        });
        }else{
            messageLabel.setText("No file to remove");
        }
        
    }//GEN-LAST:event_removeFileButtonActionPerformed

    private void generateReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateReportButtonActionPerformed
          try {
            ReportGenerator temp = new ReportGenerator(importedFiles);
            holdReport = temp;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
          messageLabel.setText(holdReport.generateReport());
    }//GEN-LAST:event_generateReportButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
             File targetExport= new File("null");
        int returnValue = openFileChooser.showSaveDialog(this);   
        if (returnValue ==JFileChooser.APPROVE_OPTION){
            targetExport = openFileChooser.getSelectedFile();
        }
        else {
            messageLabel.setText("No File choosen.");
            return;
        }   try{
                BufferedWriter fileWriter = new BufferedWriter(new  FileWriter(targetExport));
                fileWriter.write(holdReport.generateReport());
                fileWriter.close();
            }    catch (IOException ex) {
                     Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_exportButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    /**
     * The get file names method returns the file names imported into the program
     * as a string. 
     * @return 
     */
    private String getFileNames(){
          String fileNames = "";
        for(File holdData: importedFiles){
            fileNames += holdData.getName() + System.getProperty("line.separator");
        }
        return fileNames;
    }
    /**
     * the findFile method is used to find selected files by their name. 
     * @param fileName
     * @return 
     */
        private File findFile(String fileName){
        for(File holdData: importedFiles){
            if(holdData.getName().equalsIgnoreCase(fileName))
                    return holdData;
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exportButton;
    private javax.swing.JButton generateReportButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea messageLabel;
    private javax.swing.JButton openFileButton;
    private javax.swing.JButton removeFileButton;
    private javax.swing.JButton reviewFileButton;
    // End of variables declaration//GEN-END:variables
}
